# Generated by Django 5.0.2 on 2024-04-24 20:16

import django.db.models.deletion
import taggit.managers
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        (
            "taggit",
            "0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx",
        ),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Video",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("url_path", models.UUIDField(default=uuid.uuid4, editable=False)),
                ("title", models.CharField(max_length=100)),
                (
                    "slug",
                    models.SlugField(max_length=250, unique_for_date="uploaded_at"),
                ),
                ("video_file", models.FileField(upload_to="videos/")),
                ("description", models.TextField()),
                (
                    "thumbnail",
                    models.ImageField(
                        blank=True, null=True, upload_to="video_thumbnails/"
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[("PB", "Public"), ("PR", "Private")],
                        default="PB",
                        max_length=2,
                    ),
                ),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
                ("views", models.IntegerField(default=0)),
                (
                    "author",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="my_videos",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "tags",
                    taggit.managers.TaggableManager(
                        help_text="A comma-separated list of tags.",
                        through="taggit.TaggedItem",
                        to="taggit.Tag",
                        verbose_name="Tags",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="replies",
                        to="video.comment",
                    ),
                ),
                (
                    "video",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="video.video",
                    ),
                ),
            ],
            options={
                "ordering": ["created_at"],
            },
        ),
    ]
